package Configur.saxx.POJOS;
// Generated May 15, 2015 9:51:39 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Matchmaker generated by hbm2java
 */
@Entity
@Table(name="matchmaker"
    ,catalog="donation"
)
public class Matchmaker  implements java.io.Serializable {


     private int id;
     private Books books;
     private User user;
     private byte[] donRec;
     private int quantity;
     private Set transactionsForDonorId = new HashSet(0);
     private Set transactionsForRecId = new HashSet(0);

    public Matchmaker() {
    }

	
    public Matchmaker(Books books, User user, byte[] donRec, int quantity) {
        this.books = books;
        this.user = user;
        this.donRec = donRec;
        this.quantity = quantity;
    }
    public Matchmaker(Books books, User user, byte[] donRec, int quantity, Set transactionsForDonorId, Set transactionsForRecId) {
       this.books = books;
       this.user = user;
       this.donRec = donRec;
       this.quantity = quantity;
       this.transactionsForDonorId = transactionsForDonorId;
       this.transactionsForRecId = transactionsForRecId;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="user"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="Id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BookId", nullable=false)
    public Books getBooks() {
        return this.books;
    }
    
    public void setBooks(Books books) {
        this.books = books;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="DonRec", nullable=false)
    public byte[] getDonRec() {
        return this.donRec;
    }
    
    public void setDonRec(byte[] donRec) {
        this.donRec = donRec;
    }

    
    @Column(name="Quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="matchmakerByDonorId")
    public Set getTransactionsForDonorId() {
        return this.transactionsForDonorId;
    }
    
    public void setTransactionsForDonorId(Set transactionsForDonorId) {
        this.transactionsForDonorId = transactionsForDonorId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="matchmakerByRecId")
    public Set getTransactionsForRecId() {
        return this.transactionsForRecId;
    }
    
    public void setTransactionsForRecId(Set transactionsForRecId) {
        this.transactionsForRecId = transactionsForRecId;
    }




}


